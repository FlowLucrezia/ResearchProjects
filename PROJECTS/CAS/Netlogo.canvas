{
	"nodes":[
		{"id":"9b1535b7630bc3fc","type":"group","x":2000,"y":-2080,"width":4080,"height":3440,"color":"2","label":"Go"},
		{"id":"9b20e262fb90eee4","x":2560,"y":-1920,"width":2960,"height":1700,"color":"3","type":"group","label":"Regulate & Express"},
		{"id":"5d292073b0be869b","type":"group","x":-160,"y":-1040,"width":1560,"height":1640,"color":"2","label":"Setup"},
		{"id":"7ab0ccae956568a1","x":-1040,"y":-1080,"width":440,"height":1520,"color":"1","type":"group","label":"Initialization"},
		{"id":"78acd019ba709605","type":"text","text":"Task Settings\n\n`to initialize-task-settings`  \n  `if task-difficulty = \"easy\" [`  \n    `set correct-interval 20`  \n    `set correct-end 1000`  \n    `set incorrect-interval 50`  \n    `set incorrect-end 900`  \n  `]`  \n  `if task-difficulty = \"medium\" [`  \n    `set correct-interval 40`  \n    `set correct-end 1000`  \n    `set incorrect-interval 30`  \n    `set incorrect-end 900`  \n  `]`  \n  `if task-difficulty = \"hard\" [`  \n    `set correct-interval 50`  \n    `set correct-end 1000`  \n    `set incorrect-interval 20`  \n    `set incorrect-end 900`  \n  `]`  \n  \n  `if task-difficulty = \"no task\" [`  \n    `set correct-interval 0`  \n    `set correct-end 0`  \n    `set incorrect-interval 0`  \n    `set incorrect-end 0`  \n  `]`  \n  `print (word \"Task settings: \"`  \n          `\"Correct interval: \" correct-interval \", \"`  \n          `\"Correct end: \" correct-end \", \"`  \n          `\"Incorrect interval: \" incorrect-interval \", \"`  \n          `\"Incorrect end: \" incorrect-end)`  \n`end`  \n\n\n`to setup-task-plot`  \n  `set-current-plot \"Task-Performance\"`  \n  `set-plot-x-range 0 1000`  \n  `set-plot-y-range 0 1`  \n`end`  \n","x":-120,"y":-580,"width":428,"height":1140,"color":"2"},
		{"id":"4b2d531018e5615f","type":"text","text":"Agent Settings\n\n`to initialize-agent`  \n\n  `set size 3`  \n  `let radius (min list world-width world-height) / 3`  \n  `layout-circle teammates radius`  \n  `set shape \"controller\"`  \n  \n  `set personality (list ((random 4 + 1) / 5) ((random 4 + 1) / 5) ((random 4 + 1) / 5)`  \n                  `((random 4 + 1) / 5) ((random 4 + 1) / 5))`  \n                  \n  `set valence random-normal 0 0.2`  \n  `set arousal random-normal 0 0.2`  \n  `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n  `set valence-history []`  \n  \n  `set timestep 0`  \n  `calculate-personality-parameters`  \n  \n `end`  \n  \n`to calculate-personality-parameters`  \n\n  `;; Susceptibility (δR)`  \n  `set susceptibility 0.35 * (item 0 personality) - 0.18 * (item 1 personality) +`  \n  `0.14 * (item 2 personality) + 0.31 * (item 3 personality) + 0.02 * (item 4 personality)`  \n  \n  `;; Expressiveness (εS)`  \n  `set expressiveness 0.14 * (item 0 personality) - 0.02 * (item 1 personality) +`  \n  `0.32 * (item 2 personality) + 0.11 * (item 3 personality) + 0.29 * (item 4 personality)`  \n  \n  `;; Regulation Effectiveness (τR)`  \n  `set regulation-effectiveness 0.17 * (item 0 personality) -`  \n  `0.22 * (item 1 personality) + 0.19 * (item 2 personality) + 0.45 * (item 3 personality) + 0.23 * (item 4 personality)`  \n  \n  `;; Positive/Negative Bias`  \n  `set positive-bias 1 + (0.2 * (item 0 personality) -`  \n    `0.26 * (item 1 personality) + 0.44 * (item 2 personality) + 0.12 * (item 3 personality) + 0.29 * (item 4 personality)) / 2`  \n  `set negative-bias 1 - (0.03 * (item 0 personality) -`  \n    `0.21 * (item 1 personality) + 0.18 * (item 2 personality) + 0.19 * (item 3 personality) + 0.54 * (item 4 personality)) / 2`  \n    \n`end`  \n  \n`to assign-roles`  \n\n  `ifelse role-structure = true [`  \n    `;; Fixed roles: Assign \"controller\" to the first teammate, and \"guide\" to the others`  \n    `ask teammate 0 [ set role \"controller\"`  \n      `set color blue`  \n    `]       ;; First teammate is always a controller`  \n    `ask teammates with [who != 0] [ set role \"guide\"`  \n    `set color green`  \n    `] ;; Other teammates are guides`  \n  `] [`  \n    `;; Mutable roles: All agents are \"controller\"`  \n    `ask teammates [ set role \"controller\"`  \n    `set color blue`  \n    `]        ;; Assign all teammates as controllers`  \n  `]`  \n  \n`end`","x":360,"y":-1000,"width":985,"height":1560,"color":"2"},
		{"id":"8f4bf25894259016","x":-120,"y":-1000,"width":428,"height":390,"color":"2","type":"text","text":"**Setup procedure** (observer)\n\n`to setup`  \n  `clear-all`  \n  `initialize-task-settings`  \n  `setup-task-plot`  \n  `create-teammates 3 [`  \n    `initialize-agent`  \n    `assign-roles`  \n  `]`  \n  `reset-ticks`  \n`end`  \n\n  "},
		{"id":"667cc1f54d9959b9","type":"text","text":"**global variables**\n\n`globals [`  \n  `task-outcome`  \n  `correct-interval correct-end incorrect-interval incorrect-end` \n`]`\n\nIn interface:\n- *task difficulty (easy, medium, hard)*\n- *role structure (fixed vs mutable)*\n- *emotion contagion (on/off)*\n","x":-1020,"y":-1040,"width":380,"height":360,"color":"1"},
		{"id":"55f661050e865aaf","type":"text","text":"agents\n\n`breed [teammates teammate]`  \n  \n`teammates-own [`  \n  `angle`  \n  `angle-degrees`  \n  `valence-history`  \n  `valence` \n  `valence_out1`  \n  `valence_out2`  \n  `influence-valence`  \n  `EC-valence`  \n  `ET-valence`  \n  `delta-valence`  \n  `arousal`  \n  `arousal_out1`  \n  `arousal_out2`  \n  `influence-arousal`  \n  `EC-arousal`  \n  `ET-arousal`  \n  `delta-arousal`  \n  `intensity`\n  `instability`  \n  `beta`  \n  `dist`  \n  `RSR`  \n  `channel-strength`  \n  `total-channel-strength`  \n  `personality`  \n  `role` \n  `susceptibility`  \n  `expressiveness` \n  `regulation-effectiveness`  \n  `positive-bias`   \n  `negative-bias`  \n  `timestep`  \n  `tmax`  \n  `tanh`  \n`]`","x":-1020,"y":-650,"width":380,"height":1050,"color":"1"},
		{"id":"ca2c76959d04b412","x":2080,"y":-1505,"width":360,"height":760,"type":"text","text":"**Go procedure (observer)**\n  \n`to go`  \n    \n  `ask teammates [`  \n    `regulate-emotion`  \n    `express-emotion`  \n  `]`  \n    \n  `if emotion-contagion = true [`  \n    `ask teammates[`  \n    `output-emotions`  \n    `contagion`  \n    `]`  \n  `]`  \n  \n  `if task-event = true [`  \n    `ask teammates [`  \n     `update-task-emotion`  \n   `]`  \n  `]`  \n  \n  `update-task-performance-plot`  \n  \n  `if ticks >= 1000 [`  \n    `stop`  \n  `]`  \n  \n  `tick`  \n`end`"},
		{"id":"a979082035bea348","x":2097,"y":320,"width":686,"height":880,"color":"4","type":"text","text":"**Contagion Procedure**\n  \n`to contagion`  \n `set EC-valence calculate-contagion-valence`  \n `set EC-arousal calculate-contagion-arousal`  \n `set valence valence + EC-valence`  \n `set arousal arousal + EC-arousal`  \n `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n`end`  \n  \n`to-report calculate-contagion-valence`  \n `;let total-channel-strength 0`  \n `ask teammates [`  \n   `set channel-strength calculate-channel-strength`  \n   `set influence-valence calculate-influence-valence`  \n   `set total-channel-strength sum [channel-strength] of teammates`  \n   `let net-influence-v sum [influence-valence] of other teammates`  \n   `set EC-valence net-influence-v / total-channel-strength`  \n  `]`  \n  `report EC-valence`  \n`end`  \n  \n`to-report calculate-contagion-arousal`  \n  `;let total-channel-strength 0`  \n  `ask teammates [`  \n   `set channel-strength calculate-channel-strength`  \n   `set influence-arousal calculate-influence-arousal`  \n   `set total-channel-strength sum [channel-strength] of teammates`  \n   `let net-influence-a sum [influence-arousal] of other teammates`  \n   `set EC-arousal net-influence-a / total-channel-strength`  \n  `]`  \n  `report EC-arousal`  \n`end`"},
		{"id":"9503c513bcc02a6f","type":"text","text":"**Output Emotions**\n\n`to output-emotions`  \n    `let senders n-of 2 other teammates`  \n    `let senderlist [who] of senders`  \n    `set valence_out1 first [valence] of senders with [who = first senderlist]`  \n    `set valence_out2 first [valence] of senders with [who = last senderlist]`  \n    `set arousal_out1 first [arousal] of senders with [who = first senderlist]`  \n    `set arousal_out2 first [arousal] of senders with [who = last senderlist]`  \n`end` ","x":2097,"y":-120,"width":686,"height":325,"color":"4"},
		{"id":"6d259707c136e8d5","x":3855,"y":-160,"width":905,"height":1440,"color":"4","type":"text","text":"**Calculate Influence**\n\n`to-report calculate-influence-valence`  \n  `let ESw 0`  \n  `if channel-strength > 0 [`  \n  `ask teammates [`  \n    `set total-channel-strength sum [channel-strength] of teammates`  \n    `let ES valence_out1 + valence_out2`  \n    `let ESv (channel-strength * ES / total-channel-strength)`  \n    `let ER valence`  \n    `set ESw sum [ESv] of other teammates`  \n    `let inf (ESw + 1) / 2`  \n  \n   `if (ESw >= 0 and ER >= 0) [`  \n       `set influence-valence inf * (1 - (1 - (abs(ESw)))*(1 - ER)) + ((1 - inf) * ESw * ER) - ER`  \n    `]`  \n    `if (ESw <= 0 and ER <= 0) [`  \n       `set influence-valence -1 * inf * (1 - ((1 - abs(ESw)))*(1 - ER)) + ((1 - inf) * ESw * ER) - ER`  \n    `]`  \n   `if (ESw >= 0 and ER <= 0) [`  \n       `set influence-valence inf * (ESw - ((1 - inf)) * ER)`  \n    `]`  \n    `if (ESw <= 0 and ER >= 0) [`  \n      `set influence-valence inf * (ESw - ((1 - inf)) * ER)`  \n    `]`  \n  `]`  \n  `]`  \n  `report influence-valence`  \n`end`  \n  \n`to-report calculate-influence-arousal`  \n  `let ESw 0`  \n  `if channel-strength > 0 [`  \n  `ask teammates [`  \n    `set total-channel-strength sum [channel-strength] of teammates`  \n    `let ES arousal_out1 + arousal_out2`  \n    `let ESa (channel-strength * ES / total-channel-strength)`  \n    `let ER arousal`  \n    `set ESw sum [ESa] of other teammates`  \n    `let inf (ESw + 1) / 2`  \n  \n   `if (ESw >= 0 and ER >= 0) [`  \n       `set influence-arousal inf * (1 - (1 - (abs(ESw)))*(1 - ER)) + ((1 - inf) * ESw * ER) - ER`  \n    `]`  \n    `if (ESw <= 0 and ER <= 0) [`  \n       `set influence-arousal -1 * inf * (1 - ((1 - abs(ESw)))*(1 - ER)) + ((1 - inf) * ESw * ER) - ER`  \n    `]`  \n   `if (ESw >= 0 and ER <= 0) [`  \n       `set influence-arousal inf * (ESw - ((1 - inf)) * ER)`  \n    `]`  \n    `if (ESw <= 0 and ER >= 0) [`  \n      `set influence-arousal inf * (ESw - ((1 - inf)) * ER)`  \n    `]`  \n  `]`  \n  `]`  \n  `report influence-arousal`  \n`end`"},
		{"id":"64be0cbf7cdeace0","x":4960,"y":-40,"width":840,"height":1240,"color":"5","type":"text","text":"**Influence of Task Performance**\n\n`to-report task-event`  \n\n  `ifelse ticks >= 10 and ticks <= correct-end and ticks mod correct-interval = 0 [`  \n    `print (word \"Correct event at tick \" ticks)`  \n    `set task-outcome \"correct\"`  \n    `report true`  \n  `] [`  \n    `ifelse ticks >= 15 and ticks <= incorrect-end and ticks mod incorrect-interval = 0 [`  \n      `print (word \"Incorrect event at tick \" ticks)`  \n      `set task-outcome \"incorrect\"`  \n      `report true`  \n    `] [`  \n      `report false`  \n    `]`  \n  `]`  \n  \n`end`  \n  \n`to update-task-emotion`  \n\n `set ET-arousal random-normal 0.3 0.2`  \n  \n `if task-outcome = \"correct\" [`  \n   `set ET-valence random-normal 0.3 0.2`  \n `]`  \n `if task-outcome = \"incorrect\" [`  \n   `set ET-valence random-normal 0 0.2`  \n `]`  \n  \n `if ET-valence > 0 [`  \n   `set ET-valence ET-valence * positive-bias`  \n `]`  \n `if ET-valence <= 0 [`  \n   `set ET-valence ET-valence * negative-bias`  \n `]`  \n  \n `set valence valence + ET-valence`  \n `set arousal arousal + ET-arousal`  \n `set intensity  sqrt (valence ^ 2 + arousal ^ 2)`  \n \n`end`\n  \n`to update-task-performance-plot`  \n\n  `let value-as-number ifelse-value (task-outcome = \"correct\") [1] [0]`  \n  `set-current-plot \"Task-Performance\"`  \n  `set-current-plot-pen \"performance\"`  \n  `plot value-as-number`  \n  \n`end`"},
		{"id":"5ae3141ee8c57c81","x":2960,"y":205,"width":760,"height":880,"color":"4","type":"text","text":"**Calculate Channel Strength**\n\n`to-report calculate-channel-strength`  \n `ask teammates [`  \n `set beta calculate-beta`  \n `let delta susceptibility`  \n `let theta_w calculate-attention-bias`  \n `set channel-strength beta * delta * theta_w`  \n  `]`  \n `report channel-strength`  \n`end`  \n  \n`to-report calculate-beta`  \n `ask teammates [`  \n    `set RSR ifelse-value (role-structure = true and`  \n   `(role = \"controller\")) [1] [0.8]` \n    `set dist 1`  \n    `set beta (1 / dist * RSR)`  \n  `]`  \n  `report beta`  \n`end`  \n  \n`to-report calculate-attention-bias`  \n  `let theta_w [expressiveness] of teammates`  \n  `ask teammates [`  \n    `let theta expressiveness`  \n    `let importance 1`  \n    `let N 3`  \n    `let theta_c sum [expressiveness] of other teammates`\n    `set theta_w (((1 / N) + (importance * theta)) / (1 + (importance * theta_c)))`  \n  `]`  \n  `report theta_w`  \n`end`"},
		{"id":"3946dac1ef289d4a","x":2680,"y":-1750,"width":680,"height":640,"color":"3","type":"text","text":"**Regulate emotion based on logit function**\n\n`to regulate-emotion`  \n\n  `if intensity > 0.2 [`  \n  `let decay 1.1`  \n  `set delta-valence -1 * (regulation-effectiveness / 10) * ln (abs ((0.5 + 0.5 * (valence / decay)) / (1 - (0.5 * (1 + valence / decay)))))`  \n  `set delta-arousal -1 * (regulation-effectiveness / 10) * ln (abs ((0.5 + 0.5 * (arousal / decay)) / (1 - (0.5 * (1 + arousal / decay)))))`  \n  `]`  \n    `set valence valence + delta-valence`  \n    `set arousal arousal + delta-arousal`  \n    \n    `if abs valence < 0.001 [`  \n      `set valence 0`  \n  `]`  \n    `if abs arousal < 0.001 [`  \n      `set arousal 0`  \n    `]`  \n  \n  `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n  \n`end`"},
		{"id":"af35b7473150b905","x":3360,"y":-1035,"width":90,"height":50,"color":"3","type":"text","text":"**OR**"},
		{"id":"21c2ac1e0f1b0447","type":"text","text":"**Regulate emotion based on logistic function**\n\n`to regulate-emotion`  \n\n`if intensity > 0.2 [`  \n `set delta-valence (regulation-effectiveness * (valence) * (1 - valence))`  \n `set delta-arousal (regulation-effectiveness * (arousal) * (1 - arousal))`  \n`]`  \n  \n    set valence valence + delta-valence  \n    set arousal arousal + delta-arousal  \n\n    if abs valence < 0.001 [  \n      set valence 0  \n  `]`  \n    `if abs arousal < 0.001 [`  \n      `set arousal 0`  \n    `]`  \n  \n  `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n  \n`end`","x":2680,"y":-840,"width":680,"height":600,"color":"3"},
		{"id":"31ba83095331c1ea","x":4800,"y":-1430,"width":620,"height":620,"color":"3","type":"text","text":"**Express emotion and calculate instability**\n\n`to express-emotion`  \n  \n `set valence valence * expressiveness`  \n `set arousal arousal * expressiveness`  \n  `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n  \n    if arousal > 0 [  \n      set angle atan arousal valence  \n      set angle-degrees (angle * 180 / pi) \n      set valence-history lput angle-degrees valence-history  \n  \n      if length valence-history > 2 [  \n        set instability standard-deviation valence-history]   \n      if length valence-history <= 2 [\n        set instability 0\n      ] \n    ]  \n \n`end`"},
		{"id":"3f0bfcda73d57309","type":"text","text":"**Regulate emotion based on hyperbolic tangent function**\n\n`to regulate-emotion`  \n     `if intensity > 0.2 [`  \n   `set timestep timestep + 1`  \n  `]`                           \n    `if intensity <= 0.2 [`  \n      `set timestep 0`  \n    `]`  \n  \n    `set tmax (ifelse-value`  \n      `intensity > 0.4 [100]`  \n      `intensity > 0.8 [50]`  \n      `[250]`  \n      `)`  \n  \n    `let T random-normal (tmax - tmax * (regulation-effectiveness)) 20`  \n    `set tanh ((exp (timestep - T)) - (exp (-1 * (timestep - T)))) / ((exp (timestep - T)) + (exp (-1 * (timestep - T))))`  \n    `set delta-valence (-1 * valence) * ((1 + tanh) / 2)`  \n    `set delta-arousal (-1 * arousal) * ((1 + tanh) / 2)`  \n\n    `set valence valence + delta-valence`  \n    `set arousal arousal + delta-arousal`  \n    \n    `if abs valence < 0.001 [`  \n      `set valence 0`  \n  `]`  \n    `if abs arousal < 0.001 [`  \n      `set arousal 0`  \n    `]`  \n  \n  `set intensity sqrt (valence ^ 2 + arousal ^ 2)`  \n  \n`end`","x":3520,"y":-1570,"width":1080,"height":900,"color":"3"}
	],
	"edges":[
		{"id":"5e9e03353c9dd23a","fromNode":"7ab0ccae956568a1","fromSide":"right","toNode":"5d292073b0be869b","toSide":"left"},
		{"id":"11746aebf718f14d","fromNode":"5d292073b0be869b","fromSide":"right","toNode":"9b1535b7630bc3fc","toSide":"left"},
		{"id":"54e5a6fb4a61380c","fromNode":"3f0bfcda73d57309","fromSide":"right","toNode":"31ba83095331c1ea","toSide":"left"},
		{"id":"18677be245179f14","fromNode":"21c2ac1e0f1b0447","fromSide":"right","toNode":"31ba83095331c1ea","toSide":"bottom"},
		{"id":"611949223a329138","fromNode":"3946dac1ef289d4a","fromSide":"top","toNode":"31ba83095331c1ea","toSide":"top"},
		{"id":"c6206e88122e8728","fromNode":"31ba83095331c1ea","fromSide":"bottom","toNode":"9503c513bcc02a6f","toSide":"right"},
		{"id":"f91f7ec3091bd6f7","fromNode":"9503c513bcc02a6f","fromSide":"bottom","toNode":"a979082035bea348","toSide":"top"},
		{"id":"0192364408ff3295","fromNode":"a979082035bea348","fromSide":"right","toNode":"5ae3141ee8c57c81","toSide":"left"},
		{"id":"55e934f7acf95981","fromNode":"5ae3141ee8c57c81","fromSide":"right","toNode":"6d259707c136e8d5","toSide":"left"},
		{"id":"7e9a0652281b32b8","fromNode":"6d259707c136e8d5","fromSide":"right","toNode":"64be0cbf7cdeace0","toSide":"left"},
		{"id":"885727395589881d","fromNode":"64be0cbf7cdeace0","fromSide":"top","toNode":"9b20e262fb90eee4","toSide":"right"},
		{"id":"4294ef4d9e8de84a","fromNode":"ca2c76959d04b412","fromSide":"right","toNode":"9b20e262fb90eee4","toSide":"left"}
	]
}